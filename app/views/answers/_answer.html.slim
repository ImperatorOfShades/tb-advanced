- cache answer do
  .row.text-left.border-bottom class=(answer.best? ? 'has-best' : '' ) id=("answer_#{answer.id}")
    .col-md-12
      h6.text-right.font-italic
        = answer.user.email
    .voting.col-sm-1
      div id=("answer_#{answer.id}-errors")
      = link_to upvote_question_answer_path(@question, answer), method: :post, remote: true, data: { type: :json }, class: 'answer-voting' do
        span.oi.oi-chevron-top
      p.circle id=("rating_#{answer.id}") = answer.rating
      = link_to downvote_question_answer_path(@question, answer), method: :post, remote: true, data: { type: :json }, class: 'answer-voting' do
        span.oi.oi-chevron-bottom
      = link_to unvote_question_answer_path(@question, answer), method: :delete, remote: true, data: {type: :json, id: answer.id}, class: "unvote-answer", style: display_voted(answer) do
        span.oi.oi-x
    .col-sm-11
      p.answer
        = answer.body
      ul.answer-attachments
        -cache collection_relation_cache_key_for(:attachment, answer)
          -answer.attachments.each do |a|
            li
              = link_to a.file.identifier, a.file.url
              |
              - if a.attachable.author? current_user
                = link_to 'Remove file', attachment_path(a), method: :delete, class: 'btn btn-outline-danger btn-sm'
      .row
        .controls.col-md-12
          - if (!answer.best?) && (answer.question.author? current_user)
            = link_to 'Best Answer', best_question_answer_path(answer.question, answer), method: :patch, remote: true, class: 'btn btn-outline-success btn-sm best-answer-link', data: {answer_id: answer.id}
          - if user_signed_in? && answer.author?(current_user)
            = link_to 'Edit', '', class: 'edit-answer-link btn btn-outline-primary btn-sm', data: { answer_id: answer.id }
            = link_to('Delete', question_answer_path(@question, answer),
                    method: :delete, remote: true, class: 'btn btn-outline-danger btn-sm delete-answer-link')
            p
              = form_for [@question, answer], remote: true, html: {id: "edit-answer-#{answer.id}"} do |f|
                = f.label :body
                = f.text_area :body
                = f.submit 'Save'
      .row
        .col-md-12.text-left.text-uppercase
          | Comments:
        .comments.col-md-8.border-bottom class=("answer-comments-#{answer.id}")
          - answer.comments.each do |comment|
            = render 'comments/comment', comment: comment
        - if user_signed_in?
          .col-md-4
            p.text-uppercase = link_to 'Comment', '#', class: 'show-answer-comment-form'
            .answer-comment-form.hidden
              = render 'comments/form_answer', answer: answer